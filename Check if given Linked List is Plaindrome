// C++ Code
#include <bits/stdc++.h> 
/****************************************************************

    Following is the class structure of the LinkedListNode class:

    template <typename T>
    class LinkedListNode
    {
    public:
        T data;
        LinkedListNode<T> *next;
        LinkedListNode(T data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

*****************************************************************/
LinkedListNode<int>* reverseList(LinkedListNode<int>* head) {
        if(!head)
            return head;
        LinkedListNode<int>* next=head;
        LinkedListNode<int>* prev=NULL;
        LinkedListNode<int>* curr=NULL;
        
        while(next)
        {
            curr=next;
            next=next->next;
            curr->next=prev;
            prev=curr;
        }
        
        return curr;   
    }
bool isPalindrome(LinkedListNode<int> *head) {
    // Write your code here.
	if(!head || !head->next)
        return true;
    
    LinkedListNode<int> *slow=head,*fast=head;
    while(fast && fast->next &&fast->next->next)
    {
        // stk.push(slow->val);
        slow=slow->next;
        fast=fast->next->next;
    }
    slow->next=reverseList(slow->next);
    slow=slow->next;
    while(slow)
    {
        if(head->data != slow->data)
            return false;
        head=head->next;
        slow=slow->next;
    }
    return true;
}
